{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","ALLOWED_IMAGE_TYPES","UploadForm","type","onChange","e","selectedFile","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","layout","whileHover","opacity","scale","whileTap","key","onClick","img","transition","delay","src","alt","Modal","selectedImg","classList","contains","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adb1d72d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBoYTs9nI5na0gLfaIwmbi3bLUVKAdLAzM\",\r\n  authDomain: \"firegram-bea2f.firebaseapp.com\",\r\n  databaseURL: \"https://firegram-bea2f.firebaseio.com\",\r\n  projectId: \"firegram-bea2f\",\r\n  storageBucket: \"firegram-bea2f.appspot.com\",\r\n  messagingSenderId: \"701680903565\",\r\n  appId: \"1:701680903565:web:a3ace84b9022fe68f689c4\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timestamp,\r\n} from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // References\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection(\"images\");\r\n\r\n    storageRef.put(file).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        const percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        collectionRef.add({ url, createdAt });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hooks/useStorage\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { url, progress } = useStorage(file);\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + \"%\" }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst ALLOWED_IMAGE_TYPES = [\"image/png\", \"image/jpg\", \"image/jpeg\"];\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const changeHandler = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile && ALLOWED_IMAGE_TYPES.includes(selectedFile.type)) {\r\n      setFile(selectedFile);\r\n      setError(null);\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please select an image file (png, jpg or jpeg)\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <label>\r\n        <input type=\"file\" onChange={changeHandler} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className=\"output\">\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        const documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDocs(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore;\r\n","import React from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore(\"images\");\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <motion.div\r\n            layout\r\n            whileHover={{ opacity: 1, scale: 1.025 }}\r\n            whileTap={{ scale: 0.95 }}\r\n            className=\"img-wrap\"\r\n            key={doc.id}\r\n            onClick={() => setSelectedImg(doc.url)}\r\n          >\r\n            <motion.img\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1 }}\r\n              src={doc.url}\r\n              alt=\"image uploaded\"\r\n            />\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Modal = ({ setSelectedImg, selectedImg }) => {\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains(\"backdrop\")) {\r\n      setSelectedImg(null);\r\n    }\r\n  };\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img\r\n        initial={{ opacity: 0, scale: 0.5 }}\r\n        animate={{ opacity: 1, scale: 1 }}\r\n        src={selectedImg}\r\n        alt=\"enlarged pic\"\r\n      />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\nimport Title from \"./comps/Title\";\nimport UploadForm from \"./comps/UploadForm\";\nimport ImageGrid from \"./comps/ImageGrid\";\nimport Modal from \"./comps/Modal\";\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}